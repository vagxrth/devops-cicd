name: CD Prod
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Add overall job timeout
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.P_KEY }}" > ~/.ssh/deploy_key
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/deploy_key
          chmod 600 ~/.ssh/known_hosts
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/deploy_key

      - name: Test SSH Connection
        run: |
          ssh -i ~/.ssh/deploy_key -v root@64.227.156.33 "echo 'SSH connection test successful'"

      - name: Deploy with SSH
        run: |
          ssh -i ~/.ssh/deploy_key -t root@64.227.156.33 "
            # Exit on error, but allow commands after pipe to fail
            set -e
            set +o pipefail
            
            echo 'Starting deployment...'
            
            echo 'Checking Node.js installation...'
            if ! command -v node &> /dev/null; then
              echo 'Installing Node.js...'
              curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
              apt-get install -y nodejs
            fi

            echo 'Checking pnpm installation...'
            if ! command -v pnpm &> /dev/null; then
              echo 'Installing pnpm...'
              npm install -g pnpm
            fi

            echo 'Checking PM2 installation...'
            if ! command -v pm2 &> /dev/null; then
              echo 'Installing PM2...'
              npm install -g pm2
            fi
            
            echo 'Checking repository...'
            if [ ! -d 'devops-cicd' ]; then
              echo 'Cloning repository...'
              git clone https://github.com/vagxrth/devops-cicd.git
            fi
            
            echo 'Navigating to project directory...'
            cd devops-cicd
            
            echo 'Pulling latest changes...'
            git pull
            
            echo 'Stopping any running processes...'
            pm2 stop all 2>/dev/null || true
            pm2 delete all 2>/dev/null || true
            
            echo 'Cleaning up...'
            if [ -d '.next' ]; then
              echo 'Removing .next directory...'
              rm -rf .next
            fi
            
            if [ -d 'node_modules/.cache' ]; then
              echo 'Removing cache...'
              rm -rf node_modules/.cache
            fi
            
            echo 'Installing dependencies...'
            pnpm install
            
            echo 'Building application...'
            pnpm run build
            
            echo 'Starting application with PM2...'
            pm2 start npm --name 'next-app' -- start
            
            echo 'Deployment completed successfully!'
          "
